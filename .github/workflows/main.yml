name: CycleTrack Pro CI/CD

on:
  push:
    branches: [ main, master, dev, devLeoCICD ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: cyclist_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-html coverage requests mock unittest2 pyyaml
        pip install -r requirements.txt
    
    - name: Initialize test database
      run: |
        cd app_cyclist
        python tests/init_test_db.py --reset
    
    - name: Run tests
      run: |
        cd app_cyclist
        python tests/run_tests.py --all --pytest
    
    - name: Run test coverage
      run: |
        cd app_cyclist
        python tests/run_tests.py --coverage
    
    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: app_cyclist/coverage/html/
      if: always()

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    
    - name: Build and push API Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./api_cyclist
        push: true
        tags: ${{ secrets.lgallus }}/cyclist-api:latest
    
    - name: Build and push Streamlit Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./app_cyclist
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/cyclist-api:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - name: Deploy to production
      # Cette étape dépend de votre environnement de déploiement
      # Vous pourriez utiliser SSH pour se connecter à votre serveur et mettre à jour l'application
      run: |
        echo "Déploiement en cours..."
        # Exemple avec SSH (nécessite de configurer une clé SSH dans les secrets GitHub)
        # ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd /path/to/app && docker-compose pull && docker-compose up -d"

        